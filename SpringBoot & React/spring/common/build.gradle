configurations {
	querydsl.extendsFrom compileClasspath
	
	all {
		// spring-boot-starter-web에서 logback을 사용하기 때문에 log4j2와 충돌 방지
		//exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
		exclude module: 'spring-boot-starter-logging'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	
	// jjwt
    implementation 'io.jsonwebtoken:jjwt-api:latest.release'
    
    //implementation 'io.jsonwebtoken:jjwt-root:latest.release'
    //runtimeOnly 'io.jsonwebtoken:jjwt-jackson:latest.release'
    implementation 'io.jsonwebtoken:jjwt-jackson:latest.release'
    
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:latest.release'
	
	// Json -- start-web에 포함되어 제외
	// implementation 'com.fasterxml.jackson.core:jackson-databind'
	// implementation 'com.fasterxml.jackson.core:jackson-datatype-jsr310'
	// implementation 'com.fasterxml.jackson.core:jackson-datatype-jdk8'
	
	// cluster - redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	// Database
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	compileOnly 'mysql:mysql-connector-java'
	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	implementation 'com.h2database:h2'
	
	// Logger
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'// log4j2 설정 파일을 yml로 작성하기 위함
	
}
/*
jar {
	from {// depenency 포함시켜서 패키징
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    // build시 중복되는 파일 생성되면 오류 발생하는 것을 막기 위함
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
*/